{"ast":null,"code":"var _jsxFileName = \"/home/adiosamigos/Documents/NodeJs_Projects/Shopify_developer/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider, Context } from \"@shopify/app-bridge-react\";\nimport { authenticatedFetch } from \"@shopify/app-bridge-utils\";\nimport '@shopify/polaris/dist/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport ClientRouter from '../components/ClientRouter';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport Cookies from 'js-cookies';\n\nclass MyProvider extends React.Component {\n  render() {\n    const app = this.context;\n    const client = new ApolloClient({\n      fetch: authenticatedFetch(app),\n      fetchOptions: {\n        credentials: \"include\"\n      }\n    });\n    return __jsx(ApolloProvider, {\n      client: client,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\n_defineProperty(MyProvider, \"contextType\", Context);\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps,\n      shopOrigin\n    } = this.props;\n    const config = {\n      apiKey: API_KEY,\n      shopOrigin: Cookies.get('shopOrigin'),\n      forceRedirect: true\n    };\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \"Sample App\"), __jsx(\"meta\", {\n      charSet: \"utf-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    })), __jsx(Provider, {\n      config: config,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, __jsx(ClientRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }), __jsx(AppProvider, {\n      i18n: translations,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, __jsx(MyProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }))))));\n  }\n\n}\n\nMyApp.getInitialProps = async ({\n  ctx\n}) => {\n  return {\n    shopOrigin: ctx.query.shop\n  };\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/home/adiosamigos/Documents/NodeJs_Projects/Shopify_developer/pages/_app.js"],"names":["React","App","Head","AppProvider","Provider","Context","authenticatedFetch","translations","ClientRouter","ApolloClient","ApolloProvider","Cookies","MyProvider","Component","render","app","context","client","fetch","fetchOptions","credentials","props","children","MyApp","pageProps","shopOrigin","config","apiKey","API_KEY","get","forceRedirect","getInitialProps","ctx","query","shop"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,2BAAlC;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,OAAO,kCAAP;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,UAAN,SAAyBZ,KAAK,CAACa,SAA/B,CAAyC;AAGvCC,EAAAA,MAAM,GAAG;AACP,UAAMC,GAAG,GAAG,KAAKC,OAAjB;AAEA,UAAMC,MAAM,GAAG,IAAIR,YAAJ,CAAiB;AAC9BS,MAAAA,KAAK,EAAEZ,kBAAkB,CAACS,GAAD,CADK;AAE9BI,MAAAA,YAAY,EAAE;AACZC,QAAAA,WAAW,EAAE;AADD;AAFgB,KAAjB,CAAf;AAOA,WACE,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAEH,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKI,KAAL,CAAWC,QADd,CADF;AAKD;;AAlBsC;;gBAAnCV,U,iBACiBP,O;;AAoBvB,MAAMkB,KAAN,SAAoBtB,GAApB,CAAwB;AACtBa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAED,MAAAA,SAAF;AAAaW,MAAAA,SAAb;AAAwBC,MAAAA;AAAxB,QAAuC,KAAKJ,KAAlD;AAEA,UAAMK,MAAM,GAAG;AAAEC,MAAAA,MAAM,EAAEC,OAAV;AAAmBH,MAAAA,UAAU,EAAEd,OAAO,CAACkB,GAAR,CAAY,YAAZ,CAA/B;AAA0DC,MAAAA,aAAa,EAAE;AAAzE,KAAf;AACA,WACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAM,MAAA,OAAO,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE,MAAC,QAAD;AAAU,MAAA,MAAM,EAAEJ,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,WAAD;AAAa,MAAA,IAAI,EAAEnB,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeiB,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CAFF,CALF,CADF;AAgBD;;AArBqB;;AAwBxBD,KAAK,CAACQ,eAAN,GAAwB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AACzC,SAAO;AACLP,IAAAA,UAAU,EAAEO,GAAG,CAACC,KAAJ,CAAUC;AADjB,GAAP;AAGD,CAJD;;AAMA,eAAeX,KAAf","sourcesContent":["import React from 'react';\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider, Context } from \"@shopify/app-bridge-react\";\nimport { authenticatedFetch } from \"@shopify/app-bridge-utils\";\nimport '@shopify/polaris/dist/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport ClientRouter from '../components/ClientRouter';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport Cookies from 'js-cookies';\n\nclass MyProvider extends React.Component {\n  static contextType = Context;\n\n  render() {\n    const app = this.context;\n\n    const client = new ApolloClient({\n      fetch: authenticatedFetch(app),\n      fetchOptions: {\n        credentials: \"include\",\n      },\n    });\n\n    return (\n      <ApolloProvider client={client}>\n        {this.props.children}\n      </ApolloProvider>\n    );\n  }\n}\n\nclass MyApp extends App {\n  render() {\n    const { Component, pageProps, shopOrigin } = this.props;\n\n    const config = { apiKey: API_KEY, shopOrigin: Cookies.get('shopOrigin'), forceRedirect: true };\n    return (\n      <React.Fragment>\n        <Head>\n          <title>Sample App</title>\n          <meta charSet=\"utf-8\" />\n        </Head>\n        <Provider config={config}>\n          <ClientRouter />\n          <AppProvider i18n={translations}>\n            <MyProvider>\n              <Component {...pageProps} />\n            </MyProvider>\n          </AppProvider>\n        </Provider>\n      </React.Fragment>\n    );\n  }\n}\n\nMyApp.getInitialProps = async ({ ctx }) => {\n  return {\n    shopOrigin: ctx.query.shop,\n  }\n}\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}