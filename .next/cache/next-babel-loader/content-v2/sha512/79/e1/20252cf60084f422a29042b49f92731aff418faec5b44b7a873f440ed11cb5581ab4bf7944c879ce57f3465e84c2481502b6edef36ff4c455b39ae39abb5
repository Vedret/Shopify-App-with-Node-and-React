{"ast":null,"code":"require('isomorphic-fetch'); //import \"@babel/polyfill\";\n\n\nconst dotenv = require('dotenv');\n\nconst {\n  verifyRequest\n} = require('@shopify/koa-shopify-auth');\n\nconst {\n  default: createShopifyAuth\n} = require('@shopify/koa-shopify-auth');\n\nconst {\n  default: Shopify,\n  ApiVersion\n} = require('@shopify/shopify-api');\n\nconst Koa = require('koa');\n\nconst next = require('next');\n\nconst Router = require(\"koa-router\");\n\nconst session = require(\"koa-session\");\n\ndotenv.config();\nconst port = parseInt(process.env.PORT, 10) || 3000;\nconst dev = true;\nconst app = next({\n  dev\n});\nconst handle = app.getRequestHandler();\nShopify.Context.initialize({\n  API_KEY: process.env.SHOPIFY_API_KEY,\n  API_SECRET_KEY: process.env.SHOPIFY_API_SECRET,\n  SCOPES: process.env.SHOPIFY_API_SCOPES.split(\",\"),\n  HOST_NAME: process.env.SHOPIFY_APP_URL.replace(/https:\\/\\//, \"\"),\n  API_VERSION: ApiVersion.October20,\n  IS_EMBEDDED_APP: true,\n  SESSION_STORAGE: new Shopify.Session.MemorySessionStorage()\n});\nconst ACTIVE_SHOPIFY_SHOPS = {};\napp.prepare().then(() => {\n  const server = new Koa();\n  const router = new Router();\n  server.keys = [Shopify.Context.API_SECRET_KEY];\n  server.use(createShopifyAuth({\n    afterAuth(ctx) {\n      const {\n        shop,\n        scope\n      } = ctx.state.shopify;\n      ACTIVE_SHOPIFY_SHOPS[shop] = scope;\n      ctx.redirect(`/?shop=${shop}`);\n    }\n\n  }));\n\n  const handleRequest = async ctx => {\n    await handle(ctx.req, ctx.res);\n    ctx.respond = false;\n    ctx.res.statusCode = 200;\n  };\n\n  router.get(\"/\", async ctx => {\n    const shop = ctx.query.shop;\n\n    if (ACTIVE_SHOPIFY_SHOPS[shop] === undefined) {\n      ctx.redirect(`/auth?shop=${shop}`);\n    } else {\n      await handleRequest(ctx);\n    }\n  });\n  router.get(\"(/_next/static/.*)\", handleRequest);\n  router.get(\"/_next/webpack-hmr\", handleRequest);\n  router.get(\"(.*)\", verifyRequest(), handleRequest);\n  server.use(router.allowedMethods());\n  server.use(router.routes());\n  server.listen(port, () => {\n    console.log(`> Ready on http://localhost:${port}`);\n  });\n});","map":{"version":3,"sources":["/home/adiosamigos/Documents/NodeJs_Projects/Shopify_developer/server.js"],"names":["require","dotenv","verifyRequest","default","createShopifyAuth","Shopify","ApiVersion","Koa","next","Router","session","config","port","parseInt","process","env","PORT","dev","app","handle","getRequestHandler","Context","initialize","API_KEY","SHOPIFY_API_KEY","API_SECRET_KEY","SHOPIFY_API_SECRET","SCOPES","SHOPIFY_API_SCOPES","split","HOST_NAME","SHOPIFY_APP_URL","replace","API_VERSION","October20","IS_EMBEDDED_APP","SESSION_STORAGE","Session","MemorySessionStorage","ACTIVE_SHOPIFY_SHOPS","prepare","then","server","router","keys","use","afterAuth","ctx","shop","scope","state","shopify","redirect","handleRequest","req","res","respond","statusCode","get","query","undefined","allowedMethods","routes","listen","console","log"],"mappings":"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","sourcesContent":["require('isomorphic-fetch');\n//import \"@babel/polyfill\";\nconst dotenv = require('dotenv');\nconst { verifyRequest } = require('@shopify/koa-shopify-auth');\nconst { default: createShopifyAuth } = require('@shopify/koa-shopify-auth');\nconst { default: Shopify, ApiVersion } = require('@shopify/shopify-api');\nconst Koa = require('koa');\nconst next = require('next');\nconst Router = require( \"koa-router\");\nconst session = require( \"koa-session\");\n\n\n\ndotenv.config();\nconst port = parseInt(process.env.PORT, 10) || 3000;\nconst dev = process.env.NODE_ENV !== \"production\";\nconst app = next({\n  dev,\n});\nconst handle = app.getRequestHandler();\n\nShopify.Context.initialize({\n    API_KEY: process.env.SHOPIFY_API_KEY,\n    API_SECRET_KEY: process.env.SHOPIFY_API_SECRET,\n    SCOPES: process.env.SHOPIFY_API_SCOPES.split(\",\"),\n    HOST_NAME: process.env.SHOPIFY_APP_URL.replace(/https:\\/\\//, \"\"),\n    API_VERSION: ApiVersion.October20,\n    IS_EMBEDDED_APP: true,\n    SESSION_STORAGE: new Shopify.Session.MemorySessionStorage(),\n  \n});\n\n\nconst ACTIVE_SHOPIFY_SHOPS = {};\n\napp.prepare().then(() => {\n    const server = new Koa();\n    const router = new Router();\n    server.keys = [Shopify.Context.API_SECRET_KEY];\n\n    server.use(\n        createShopifyAuth({\n          afterAuth(ctx) {\n            const { shop, scope } = ctx.state.shopify;\n            ACTIVE_SHOPIFY_SHOPS[shop] = scope;\n\n            ctx.redirect(`/?shop=${shop}`);\n     \n          },\n        }),\n      );\n  \n    const handleRequest = async (ctx) => {\n      await handle(ctx.req, ctx.res);\n      ctx.respond = false;\n      ctx.res.statusCode = 200;\n    };\n\n    router.get(\"/\", async (ctx) => {\n      const shop = ctx.query.shop;\n  \n      if (ACTIVE_SHOPIFY_SHOPS[shop] === undefined) {\n        ctx.redirect(`/auth?shop=${shop}`);\n      } else {\n        await handleRequest(ctx);\n      }\n    });\n\n   \n\n    \n    router.get(\"(/_next/static/.*)\", handleRequest);\n    router.get(\"/_next/webpack-hmr\", handleRequest);\n    router.get(\"(.*)\", verifyRequest(), handleRequest);\n  \n    server.use(router.allowedMethods());\n    server.use(router.routes());\n\n\n\n\n  server.listen(port, () => {\n    console.log(`> Ready on http://localhost:${port}`);\n  });\n});"]},"metadata":{},"sourceType":"script"}